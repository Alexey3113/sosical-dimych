{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","s","dialog","active","id","name","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","ref","newMessageElement","component","Textarea","validate","required","placeholder","Message","message","Dialogs","dialogElements","dialogs","map","d","messageElements","messages","m","dialogsItems","values","addMessage","textMessage","compose","dialogsPage","messageText","dispatch","textOfMessage","addMessageActionCreator"],"mappings":"gPAIMA,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,IAAML,WAQtC,OADqCM,YAAQX,EAARW,CAAyBL,K,oBClBlEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,4HCYhKC,EATI,SAACN,GAChB,OACI,qBAAKO,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAAST,GAAE,mBAAcD,EAAMW,IAA/B,SAAsCX,EAAMY,U,gCCDlDC,EAAcC,YAAiB,IActBC,EAFUC,YAAU,CAAEC,KAAM,cAAlBD,EAVL,SAAChB,GACjB,OACI,sBAAMkB,SAAUlB,EAAMmB,aAAtB,SACI,gCACI,cAACC,EAAA,EAAD,CAAOC,IAAKrB,EAAMsB,kBAAmBC,UAAWC,IAAUC,SAAU,CAACC,IAAUb,GAAcD,KAAM,cAAee,YAAa,uBAC/H,oGCADC,EARC,SAAC5B,GACb,OACI,qBAAKO,UAAWC,IAAEqB,QAAlB,SAA4B7B,EAAM6B,WC+B3BC,EAhCC,SAAC9B,GACb,IAAM+B,EAAiB/B,EAAMgC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMD,GAAIuB,EAAEvB,IAASuB,EAAEvB,OAEnFwB,EAAkBnC,EAAMoC,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASR,QAASQ,EAAER,SAAcQ,EAAE1B,OAQpF,OACI,sBAAKJ,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAE8B,aAAlB,SACKP,IAKL,qBAAKxB,UAAWC,IAAE4B,SAAlB,SACKD,IAGL,cAAC,EAAD,2BAAsBnC,GAAtB,IAA6BkB,SAjBV,SAACqB,GACxBvC,EAAMwC,WAAWD,EAAOE,qBCkBjBC,sBACXvC,aArBoB,SAACV,GACrB,MAAO,CACH2C,SAAU3C,EAAMkD,YAAYP,SAC5BJ,QAASvC,EAAMkD,YAAYX,QAC3BY,YAAanD,EAAMkD,YAAYC,YAC/BlD,OAAQD,EAAME,KAAKD,WAGA,SAACmD,GACxB,MAAO,CACHL,WAAY,SAACM,GAAD,OAAmBD,EAASE,YAAwBD,SAYpElD,IAFW8C,CAEOZ","file":"static/js/4.79cd59cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2V6sj\",\"dialogsItems\":\"Dialogs_dialogsItems__25zP1\",\"dialog\":\"Dialogs_dialog__1UYU3\",\"active\":\"Dialogs_active__3Z1TH\",\"messages\":\"Dialogs_messages__x_N0U\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControl/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validations\";\r\n// import s from \"./Dialogs.module.css\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field ref={props.newMessageElement} component={Textarea} validate={[required, maxLength50]} name={\"textMessage\"} placeholder={\"Enter your message\"} ></Field>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst DialogsReduxForm = reduxForm({ form: \"dialogPost\" })(DialogsForm)\r\n\r\nexport default DialogsReduxForm;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsReduxForm from \"./DialogsForm\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n    const dialogElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />)\r\n\r\n    const messageElements = props.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n    \r\n    const addMessageOfDialog = (values) => {\r\n        props.addMessage(values.textMessage)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n\r\n\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n\r\n            </div>\r\n            <DialogsReduxForm {...props} onSubmit={addMessageOfDialog} />\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Dialogs;","// import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { addMessageActionCreator} from \"../../redux/dialogs-reducer\"\r\n// import StoreContext from \"../../StoreContext\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\n// let authRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messageText: state.dialogsPage.messageText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (textOfMessage) => dispatch(addMessageActionCreator(textOfMessage))\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n// const superDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(authRedirectComponent)\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);"],"sourceRoot":""}